version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: sales-page-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - sales-page-network
    ports:
      - "3306:3306"

  # WordPress
  wordpress:
    image: wordpress:latest
    container_name: sales-page-wordpress
    restart: unless-stopped
    depends_on:
      - db
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: wp_
    volumes:
      - wordpress_data:/var/www/html
      - ./wordpress-config/wp-config-extra.php:/usr/src/wordpress/wp-config-extra.php
    networks:
      - sales-page-network
    ports:
      - "8080:80"

  # Next.js Application
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sales-page-nextjs
    restart: unless-stopped
    depends_on:
      - wordpress
    environment:
      - NODE_ENV=production
      - WORDPRESS_API_URL=http://wordpress/graphql
      - NEXT_PUBLIC_WORDPRESS_API_URL=http://localhost:8080/graphql
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
    networks:
      - sales-page-network
    ports:
      - "3000:3000"

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: sales-page-nginx
    restart: unless-stopped
    depends_on:
      - nextjs
      - wordpress
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - sales-page-network
    ports:
      - "80:80"
      - "443:443"

volumes:
  db_data:
  wordpress_data:

networks:
  sales-page-network:
    driver: bridge